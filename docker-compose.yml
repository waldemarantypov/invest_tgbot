version: "3.8"

services:
  db:
    image: postgres:latest
    container_name: postgres_db
    restart: always
    volumes:
      - ./postgres/postgres_data:/var/lib/postgresql
      - ./db.sql:/docker-entrypoint-initdb.d/db.sql
      - ./postgres/postgres.conf:/usr/local/etc/postgres/postgres.conf
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
#    env_file:
#      - ./.env
    ports:
      - 5432:5432
#  redis:
#    image: redis:alpine
#    container_name: redis
  web:
    build: .
    container_name: django
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/code
    ports:
      - 8000:8000
    environment:
      - DJANGO_DEBUG='True'
      - DATABASE_URL=postgres://postgres:postgres@docker.for.mac.host.internal/${POSTGRES_DB}
      - POSTGRES_USER
      - POSTGRES_PASSWORD
#    env_file:
#      - ./.env
    depends_on:
      - db
#      - redis
  bot:
    build: .
    container_name: tg_bot
    command: python run_pooling.py
    restart: always
    environment:
      - TELEGRAM_TOKEN=1779291462:AAEI1yOW-50qmi6LPkAGTSfJjP_AW9PWZGo
      - DATABASE_URL=postgres://postgres:postgres@docker.for.mac.host.internal/${POSTGRES_DB}
    depends_on:
      - web
    volumes:
      - .:/code
#  celery:
#    build: .
#    container_name: celery
#    command: celery -A dtb worker --loglevel=INFO
#    volumes:
#      - .:/code
#    env_file:
#      - ./.env
#    depends_on:
#      - redis
#      - web
#  celery-beat:
#    build: .
#    container_name: celery_beat
#    command: celery -A dtb beat --loglevel=INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
#    volumes:
#      - .:/code
#    env_file:
#      - ./.env
#    depends_on:
#      - redis
#      - celery
#      - web

volumes:
  postgres_data: