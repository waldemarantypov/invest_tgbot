version: "3.3"

services:

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
#      - ./db.sql:/docker-entrypoint-initdb.d/db.sql
    env_file:
      - ./.env
    ports:
      - 5432:5432

  redis:
    container_name: redis
    image: redis:alpine
    restart: always
    volumes:
      - redis-data:/data
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - 6379
    command:
      - "--appendonly yes"

  web:
    build: .
    container_name: django
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/code
    ports:
      - 8000:8000
    env_file:
      - ./.env
    depends_on:
      - postgres
      - redis

  celery:
    build: .
    container_name: celery
    command: celery -A dtb worker --loglevel=INFO
    volumes:
      - .:/code
    env_file:
      - ./.env
    depends_on:
      - redis
      - web

#  celery-beat:
#    build: .
#    container_name: celery_beat
#    command: celery -A dtb beat --loglevel=INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
#    volumes:
#      - .:/code
#    env_file:
#      - ./.env
#    depends_on:
#      - redis
#      - celery
#      - web

  bot:
    build: .
    container_name: tg_bot
    command: python run_pooling.py
    restart: always
    env_file:
      - ./.env
    depends_on:
      - web
    volumes:
      - .:/code

volumes:
  postgres_data:
  redis-data: